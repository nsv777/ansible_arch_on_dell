---
- name: Create minikube user
  ansible.builtin.user:
    name: "{{ minikube_user }}"
    system: true
    shell: /usr/bin/bash
    groups: docker

- name: Add minikube user to sudoers
  community.general.sudoers:
    name: "{{ role_name }}_{{ minikube_user }}"
    user: "{{ minikube_user }}"
    commands: ALL

- name: Add kubectl alias
  ansible.builtin.lineinfile:
    regexp: "^alias k="
    line: "alias k='kubectl'"
    path: "$HOME/.bashrc"
  become: true
  become_user: "{{ minikube_user }}"

- name: Install minikube
  ansible.builtin.include_tasks:
    file: "{{ ansible_distribution | lower }}.yml"

- name: Command line to start cluster
  ansible.builtin.debug:
    var: minikube_start_cmdline

- name: start_minikube
  ansible.builtin.command: "{{ minikube_start_cmdline }}"
  changed_when: false
  become: true
  become_user: "{{ minikube_user }}"

- name: Render minikube_api systemd service
  ansible.builtin.template:
    src: systemd/minikube_api.service.j2
    dest: "/etc/systemd/system/minikube_api.service"
    mode: "0644"
  notify: Systemd_daemon_reload

- name: Render minikube_tunnel systemd service
  ansible.builtin.template:
    src: systemd/minikube_tunnel.service.j2
    dest: "/etc/systemd/system/minikube_tunnel.service"
    mode: "0644"
  notify: Systemd_daemon_reload

- name: Flush handlers to reload systemd config
  ansible.builtin.meta: flush_handlers

- name: Start minikube_api service
  ansible.builtin.systemd_service:
    name: minikube_api
    state: started
    enabled: true

- name: Start minikube_tunnel service
  ansible.builtin.systemd_service:
    name: minikube_tunnel
    state: started
    enabled: true

- name: Install Gateway API CRDs
  ansible.builtin.command:
    cmd: "kubectl apply -f {{ minikube_gateway_api_crds_url }}"
  changed_when: false
  become: true
  become_user: "{{ minikube_user }}"
